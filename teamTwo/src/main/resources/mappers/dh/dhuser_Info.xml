<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oracle.teamTwo.dh.dao.dhUserDao">
   <!-- 회원정보 가져오기 -->
   <select id="dhLogin" parameterType="java.lang.String" resultType="User_info">
      select * from user_info where user_id_email = #{user_id_email}
   </select>
   <!-- 아이디 중복체크 -->
   <select id="dhidCheck" parameterType="java.lang.String" resultType="int">
      select count(*) from user_info where user_id_email = #{user_id_email}
   </select>
   <!-- 닉네임 중복체크 -->
   <select id="dhnicCheck" parameterType="java.lang.String" resultType="int">
      select count(*) from user_info where user_nickname = #{user_nickname}
   </select>
   <!-- 회원가입 -->
   <insert id="dhjoin" parameterType="User_info">
      insert into user_info(user_id_email,user_nickname,user_password,user_birth,user_phone,user_gender,user_regdate,user_state,user_name)
      values(#{user_id_email},#{user_nickname},#{user_password},to_date(#{user_birth},'YYYY/MM/DD'),#{user_phone},#{user_gender},sysdate,1,#{user_name})
   </insert>
   <!-- 아이디 찾기 -->
   <select id="dhfindId" parameterType="User_info" resultType="java.lang.String">
      select user_id_email from user_info where user_name = #{user_name} and user_phone = #{user_phone}
   </select>
   <!-- 비밀번호 찾기 -->
   <select id="dhfindPw" parameterType="User_info" resultType="int">
      select count(*) from user_info where user_name = #{user_name} and user_phone = #{user_phone} and user_id_email = #{user_id_email}
   </select>
   <!-- 비밀번호 변경 -->
   <update id="dhchPw" parameterType="User_info">
      update user_info set user_password = #{user_password} where user_id_email = #{user_id_email}
   </update>
   <!-- 회원가입 환영 포인트 -->
   <insert id="dhinPoint" parameterType="java.lang.String">
      insert into point(user_id_email,point_plus,point_balance,point_timestamp,point_memo)
      values(#{user_id_email},10000,10000,sysdate,'회원가입 환영 포인트')
   </insert>
   <!-- 회원 상태 확인  -->
   <select id="dhuser_state" parameterType="java.lang.String" resultType="int">
      select user_state from user_info where user_id_email = #{user_id_email}
   </select>
   <!-- 회원 정보 수정(이미지,한줄소개) -->
   <update id="dhupdateInfo" parameterType="User_info">
      update user_info set user_image = #{user_image} , user_intro = #{user_intro}
      where user_id_email = #{user_id_email}
   </update>
   <!-- 암호 확인 로직 -->
   <select id="dhpwChk" parameterType="java.lang.String" resultType="java.lang.String">
      select user_password from user_info where user_id_email = #{user_id_email}
   </select>
   <!-- 회원 정보 수정(이미지,한줄소개,아이디 외) -->
   <update id="dhmyUser_update" parameterType="User_info">
      update user_info set user_password = #{user_password}, user_name = #{user_name}, user_nickname = #{user_nickname}, user_phone = #{user_phone},
                   user_birth = to_date(#{user_birth},'YYYY/MM/DD') where user_id_email = #{user_id_email}   
   </update>
   <!-- 최근에 로그인포인트로 받은 시간 -->
   <select id="dhlogTime" parameterType="java.lang.String" resultType="java.lang.String">
      select to_char(max(point_timestamp),'yy/mm/dd') from point where USER_ID_EMAIL = #{user_id_email} and point_memo = '로그인 포인트'
   </select>
   <!-- 최근에 로그인포인트로 받은 시간 - 현재시간 -->
   <select id="dhdateCha" parameterType="java.lang.String" resultType="int">
      SELECT TO_DATE(TO_CHAR(sysdate,'yy/mm/dd'),'YY/MM/DD') - TO_DATE(#{date, jdbcType=VARCHAR},'YY/MM/DD') FROM DUAL
   </select>
   <!-- 가장 최근 포인트 잔액 -->
   <select id="dhthisPoint" parameterType="java.lang.String" resultType="int">
      select max(point_balance) keep (dense_rank last order by point_timestamp) a from point
      where USER_ID_EMAIL = #{user_id_email}
   </select>
   <!-- 로그인 포인트 넣기 -->
   <insert id="dhloginPoint" parameterType="dhThisPoint">
      insert into point(user_id_email,point_plus,point_balance,point_timestamp,point_memo)
      values(#{user_id_email},1000,#{balance_point}+1000,sysdate,'로그인 포인트')
   </insert>
   <!-- 회원 상태 확인 -->
   <select id="dhstate" parameterType="java.lang.String" resultType="int">
      select user_state from user_info where user_id_email = #{user_id_email}
   </select>
   <!-- 자신의 닉네임을 제외한 닉네임 중복체크 -->
   <select id="dhnickCheckInfo" parameterType="User_info" resultType="int">
      select count(*) from user_info where user_nickname = #{user_nickname} and not user_id_email = #{user_id_email}
   </select>
   
   <!-- teamtwo user model -->
   <select id="teamtwo_user_model"  resultType="User_info">
   	SELECT user_id_email, user_nickname, user_image FROM user_info where user_id_email = #{user_id_email}
   </select>
</mapper>